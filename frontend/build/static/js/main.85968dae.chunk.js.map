{"version":3,"sources":["avocado.PNG","context/ThemeContext.js","components/Footer.js","components/LanguageDropdown.js","components/DarkModeToggle.js","components/MenuBar.js","components/Result.js","components/WelcomeElement.js","components/Buttons/TakePictureButton.js","components/Buttons/UploadImageButton.js","components/Buttons/AddPhotoButton.js","components/Buttons/PredictButton.js","components/Buttons/RemoveButton.js","components/ImageCarousel.js","components/Body.js","components/ErrorMessage.js","i18next.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","year","Date","getFullYear","Footer","props","t","useTranslation","darkMode","useContext","useState","accuracy","setAccuracy","fetch","method","then","res","json","val","Math","round","catch","err","console","error","style","padding","width","bottom","flex","borderTop","Segment","inverted","vertical","Container","Grid","divided","stackable","Row","Column","Header","as","content","model","List","horizontal","verticalAlign","Item","href","Icon","name","LanguageDropdown","Form","Dropdown","item","button","text","options","key","value","onChange","_","setLanguage","DarkModeToggle","setDarkMode","margin","Fragment","Checkbox","checked","toggle","MenuBar","underlineColor","Menu","borderless","fixed","borderBottom","header","Image","size","src","avocado","marginRight","position","Graph","response","result","summary","probability","toFixed","data","labels","categories","map","cat","datasets","backgroundColor","borderWidth","borderColor","probabilities","textAlign","columns","Popup","trigger","basic","marginBottom","category","marginTop","height","maintainAspectRatio","events","legend","display","plugins","render","fontColor","fontSize","NotVisibleMessage","ButtonBack","onClick","Button","animated","Content","visible","hidden","Result","out","loading","onBackClicked","Loader","active","fruit_visible","TakePicture","htmlFor","id","type","accept","capture","UploadImage","multiple","WelcomeElement","allowCamera","Divider","icon","TakePictureButton","cameraInputRef","useRef","current","click","ref","UploadImageButton","imageInputRef","AddPhotoButton","flowing","hoverable","mouseEnterDelay","mouseLeaveDelay","PredictButton","modalOpen","setModalOpen","fluid","numImagesUploaded","Modal","open","onClose","Actions","color","RemoveButton","circular","top","left","ImageCarousel","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","images","onPredictPressed","onAddPressed","imageUrls","setImageUrls","useEffect","forEach","url","URL","revokeObjectURL","urls","image","createObjectURL","imageUrl","index","centered","rounded","handleRemovePressed","length","Body","status","setStatus","setError","uploadedImages","setUploadedImages","setResponse","handleImageUploaded","event","preventDefault","prevImages","target","files","FormData","maxWidthOrHeight","compressions","img","imageCompression","Promise","all","compressedImages","append","body","Array","from","splice","isBrowser","placeholder","ErrorMessage","animation","right","opacity","zIndex","Transition","duration","Message","negative","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","react","wait","resources","en","translations","motto","upload","predict","upload_extra","upload_extra_detail","no","yes","server_error","retry_later","why","author","motivation","cookie_use","contact","get_in_touch","take_picture","upload_image","or","avocado_ripe","avocado_unripe","with_probability","this_avocado","cannot_spot","retake_photo","back","what_means","what_means_explanation","sk","App","prefers_dm","window","matchMedia","matches","addEventListener","timer","setTimeout","clearTimeout","Provider","padded","paddingTop","minHeight","flexDirection","language","changeLanguage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.85968dae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avocado.5eb1992f.PNG\";","import { createContext } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport default ThemeContext;\n","import { useState, useContext } from \"react\";\nimport {\n  Segment,\n  Container,\n  Icon,\n  Grid,\n  Header,\n  List,\n} from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst URL_LINKEDIN = \"https://www.linkedin.com/in/filip-balucha/\";\nconst URL_GITHUB = \"https://github.com/filipbalucha\";\nconst URL_FACEBOOK = \"https://www.facebook.com/filiposlav\";\nconst EMAIL = \"balucha.filip2@gmail.com\";\nconst model = \"ResNet-18 CNN\";\nvar year = new Date().getFullYear();\n\nexport const Footer = (props) => {\n  const { t } = useTranslation();\n  const { darkMode } = useContext(ThemeContext);\n\n  const [accuracy, setAccuracy] = useState(null);\n  const to_percent = (val) => Math.round(val * 100) + \"%\";\n  fetch(\"/model_accuracy\", {\n    method: \"GET\",\n  })\n    .then((res) => res.json())\n    .then(({ accuracy }) => {\n      setAccuracy(to_percent(accuracy));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  const style = {\n    padding: \"1.5em 0em\",\n    width: \"100%\",\n    bottom: 0,\n    flex: 1,\n  };\n  if (darkMode) {\n    style.borderTop = \"1px solid #C5844B\";\n  }\n  return (\n    <Segment inverted vertical style={style}>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content={t(\"author\")} />\n              <p>Filip Balucha &copy;{year}</p>\n            </Grid.Column>\n\n            <Grid.Column width={7}>\n              <Header as=\"h4\" inverted content={t(\"why\")} />\n\n              <p>{t(\"motivation\", { model, accuracy })}</p>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"Cookies\" />\n              <p>{t(\"cookie_use\")}</p>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" inverted content={t(\"contact\")} />\n              <List horizontal inverted verticalAlign=\"middle\">\n                <List.Item href={URL_LINKEDIN}>\n                  <Icon name=\"linkedin\" />\n                </List.Item>\n                <List.Item href={URL_GITHUB}>\n                  <Icon name=\"github\" />\n                </List.Item>\n                <List.Item href={URL_FACEBOOK}>\n                  <Icon name=\"facebook\" />\n                </List.Item>\n                <List.Item href={`mailto: ${EMAIL}`}>\n                  <Icon name=\"mail\" />\n                </List.Item>\n              </List>\n              <p>{t(\"get_in_touch\")}</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n","import { Icon, Form } from \"semantic-ui-react\";\n\nexport const LanguageDropdown = (props) => {\n  const languageOptions = [\n    { key: \"English\", text: \"EN 🇬🇧\", value: \"gb\" },\n    { key: \"Slovak\", text: \"SK 🇸🇰\", value: \"sk\" },\n  ];\n  return (\n    <Form>\n      <Form.Dropdown\n        item\n        button\n        text={<Icon name=\"world\" />}\n        options={languageOptions}\n        onChange={(_, { value }) => props.setLanguage(value)}\n      />\n    </Form>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Checkbox, Icon } from \"semantic-ui-react\";\nimport \"../css/Toggle.css\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const DarkModeToggle = (props) => {\n  const { darkMode, setDarkMode } = useContext(ThemeContext);\n  const style = { margin: 10 };\n  return (\n    <React.Fragment>\n      <Icon name=\"sun\" style={style} />\n      <Checkbox\n        checked={darkMode}\n        toggle\n        onChange={(_, { checked }) => setDarkMode(checked)}\n      />\n      <Icon name=\"moon\" style={style} />\n    </React.Fragment>\n  );\n};\n","import { useContext } from \"react\";\nimport { Image, Menu, Container } from \"semantic-ui-react\";\nimport { LanguageDropdown } from \"./LanguageDropdown\";\nimport { DarkModeToggle } from \"./DarkModeToggle\";\nimport avocado from \"../avocado.PNG\";\nimport \"../css/Toggle.css\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const MenuBar = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const underlineColor = darkMode ? \"#C5844B\" : \"#d2d880\";\n  return (\n    <Menu\n      inverted={darkMode}\n      borderless\n      fixed=\"top\"\n      style={{\n        borderBottom: `1px solid ${underlineColor}`,\n      }}\n    >\n      <Container>\n        <Menu.Item header>\n          <Image size=\"mini\" src={avocado} style={{ marginRight: \"1.5em\" }} />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <DarkModeToggle />\n        </Menu.Item>\n        <Menu.Item>\n          <LanguageDropdown setLanguage={props.setLanguage} />\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Grid,\n  Loader,\n  Header,\n  Popup,\n  Segment,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\nimport \"chartjs-plugin-labels\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst Graph = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { result, summary } = props.response;\n  const { t } = useTranslation();\n\n  const to_percentage = (val) => (val * 100).toFixed(2);\n  const probability = to_percentage(result.probability);\n\n  const data = {\n    labels: summary.categories.map((cat) => t(cat)),\n    datasets: [\n      {\n        backgroundColor: [\"#d9a26f\", \"#b5ba6a\"],\n        borderWidth: 1,\n        borderColor: darkMode ? \"#1B1C1D\" : \"#D9DADC\",\n        data: summary.probabilities,\n      },\n    ],\n  };\n  return (\n    <Grid textAlign=\"center\" columns=\"equal\">\n      <Grid.Row>\n        <Popup\n          inverted={darkMode}\n          header={t(\"what_means\")}\n          content={t(\"what_means_explanation\")}\n          trigger={\n            <Segment basic>\n              <Header\n                as=\"h3\"\n                style={{ marginBottom: 0 }}\n                inverted={darkMode}\n                content={t(\"this_avocado\") + \" \" + t(result.category)}\n              />\n              <Header\n                size=\"tiny\"\n                style={{ marginTop: 0 }}\n                inverted={darkMode}\n                content={t(\"with_probability\", { probability })}\n              />\n            </Segment>\n          }\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <Segment basic style={{ height: \"30vh\" }}>\n          <Pie\n            data={data}\n            options={{\n              maintainAspectRatio: false,\n              events: [], // disable everything on hover\n              legend: {\n                display: false,\n              },\n              plugins: {\n                labels: {\n                  render: \"label\",\n                  fontColor: darkMode ? \"#1B1C1D\" : \"#D9DADC\",\n                  fontSize: 16,\n                },\n              },\n            }}\n          />\n        </Segment>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst NotVisibleMessage = (props) => {\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Header as=\"h3\" content={t(\"cannot_spot\")} />\n      <p>{t(\"retake_photo\")}</p>\n    </React.Fragment>\n  );\n};\n\nconst ButtonBack = ({ onClick }) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <Button animated inverted={darkMode} onClick={onClick}>\n      <Button.Content visible content={t(\"back\")} />\n      <Button.Content hidden>\n        <Icon name=\"arrow left\" />\n      </Button.Content>\n    </Button>\n  );\n};\n\nexport const Result = (props) => {\n  const { loading, onBackClicked } = props;\n  const { t } = useTranslation();\n\n  if (loading) return <Loader active content={t(\"loading\")} />;\n\n  let out;\n  if (props.response.fruit_visible) {\n    out = <Graph {...props} />;\n  } else {\n    out = <NotVisibleMessage />;\n  }\n  return (\n    <React.Fragment>\n      {out}\n      <ButtonBack onClick={onBackClicked} />\n    </React.Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Button,\n  Header,\n  Divider,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst TakePicture = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Button\n        as=\"label\"\n        htmlFor=\"cameraInput\"\n        content={t(\"take_picture\")}\n        inverted={darkMode}\n      />\n      <input\n        id=\"cameraInput\"\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        hidden\n        onChange={props.onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst UploadImage = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Button\n        as=\"label\"\n        htmlFor=\"libraryInput\"\n        content={t(\"upload_image\")}\n        inverted={darkMode}\n      />\n      <input\n        id=\"libraryInput\"\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={props.onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const WelcomeElement = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  const { allowCamera, onClick } = props;\n  let element;\n  if (!allowCamera) {\n    element = (\n      <Segment basic>\n        <Header icon>\n          <Icon name=\"images\" inverted={darkMode} />\n        </Header>\n        <UploadImage onClick={onClick} />\n      </Segment>\n    );\n  } else {\n    element = (\n      <Grid columns={2} textAlign=\"center\">\n        <Divider inverted={darkMode} vertical content={t(\"or\")} />\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"photo\" inverted={darkMode} />\n            </Header>\n            <TakePicture onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"images\" inverted={darkMode} />\n            </Header>\n            <UploadImage onClick={onClick} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return element;\n};\n","import React, { useRef, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst TakePictureButton = ({ onClick }) => {\n  const { darkMode } = useContext(ThemeContext);\n  const cameraInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button\n        inverted={darkMode}\n        icon=\"camera\"\n        onClick={() => cameraInputRef.current.click()}\n      />\n      <input\n        ref={cameraInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TakePictureButton;\n","import React, { useRef, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst UploadImageButton = ({ onClick, icon }) => {\n  const { darkMode } = useContext(ThemeContext);\n  const imageInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button\n        inverted={darkMode}\n        icon={icon}\n        onClick={() => imageInputRef.current.click()}\n      />\n      <input\n        ref={imageInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default UploadImageButton;\n","import React, { useContext } from \"react\";\nimport { Button, Grid, Popup } from \"semantic-ui-react\";\nimport ThemeContext from \"../../context/ThemeContext\";\nimport TakePictureButton from \"./TakePictureButton\";\nimport UploadImageButton from \"./UploadImageButton\";\n\nconst AddPhotoButton = ({ allowCamera, onClick }) => {\n  const { darkMode } = useContext(ThemeContext);\n  if (!allowCamera) {\n    return <UploadImageButton onClick={onClick} icon=\"plus\" />;\n  } else {\n    return (\n      <Popup\n        inverted={darkMode}\n        trigger={<Button inverted={darkMode} icon=\"plus\" />}\n        flowing\n        hoverable\n        mouseEnterDelay={150}\n        mouseLeaveDelay={150}\n      >\n        <Grid divided columns=\"equal\">\n          <Grid.Column>\n            <TakePictureButton onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <UploadImageButton onClick={onClick} icon=\"image\" />\n          </Grid.Column>\n        </Grid>\n      </Popup>\n    );\n  }\n};\n\nexport default AddPhotoButton;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Icon, Modal, Header } from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst PredictButton = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const predict = () => {\n    if (props.numImagesUploaded < 2) setModalOpen(true);\n    else props.onClick();\n  };\n  return (\n    <React.Fragment>\n      <Button inverted={darkMode} fluid animated onClick={predict}>\n        <Button.Content visible content={t(\"predict\")} />\n        <Button.Content hidden content={<Icon name=\"arrow right\" />} />\n      </Button>\n      <Modal size=\"tiny\" open={modalOpen} onClose={() => setModalOpen(false)}>\n        <Header icon=\"camera\" content={t(\"upload_extra\")} />\n        <Modal.Content>\n          <p>{t(\"upload_extra_detail\")}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => {\n              setModalOpen(false);\n              props.onClick();\n            }}\n          >\n            <Icon name=\"remove\" /> {t(\"no\")}\n          </Button>\n          <Button color=\"green\" onClick={() => setModalOpen(false)}>\n            <Icon name=\"checkmark\" /> {t(\"yes\")}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default PredictButton;\n","import { Button } from \"semantic-ui-react\";\n\nconst RemoveButton = (props) => {\n  return (\n    <Button\n      inverted\n      size=\"medium\"\n      icon=\"trash alternate\"\n      color=\"red\"\n      circular\n      style={{\n        position: \"absolute\",\n        top: 20,\n        left: 20,\n      }}\n      onClick={props.onClick}\n    />\n  );\n};\n\nexport default RemoveButton;\n","import React, { useEffect, useState } from \"react\";\nimport { List, Divider, Segment, Image } from \"semantic-ui-react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport AddPhotoButton from \"./Buttons/AddPhotoButton\";\nimport PredictButton from \"./Buttons/PredictButton\";\nimport RemoveButton from \"./Buttons/RemoveButton\";\n\nexport const ImageCarousel = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const MAX_IMAGES = 4;\n  const { images, onPredictPressed, onAddPressed, allowCamera } = props;\n  const [imageUrls, setImageUrls] = useState([]);\n\n  useEffect(() => {\n    // Revoke URLs to prevent memory leaks\n    // Source: post by Enioluwa Segun @https://stackoverflow.com/questions/57315551/react-uploading-multiple-images\n    imageUrls.forEach((url) => URL.revokeObjectURL(url));\n    const urls = images.map((image) => URL.createObjectURL(image));\n    setImageUrls(urls);\n  }, [images]);\n\n  return (\n    <React.Fragment>\n      <List horizontal={isDesktopOrLaptop} verticalAlign=\"middle\">\n        {imageUrls.map((imageUrl, index) => (\n          <List.Item key={index}>\n            <Image />\n            <List.Content>\n              <Segment basic>\n                <Image centered rounded src={imageUrl} size=\"medium\" />\n                <RemoveButton\n                  onClick={() => props.handleRemovePressed(index)}\n                />\n              </Segment>\n            </List.Content>\n          </List.Item>\n        ))}\n        {images.length < MAX_IMAGES && (\n          <List.Item>\n            <Image />\n            <List.Content>\n              <AddPhotoButton\n                allowCamera={allowCamera}\n                onClick={onAddPressed}\n              />\n            </List.Content>\n          </List.Item>\n        )}\n      </List>\n      <Divider />\n      <PredictButton\n        numImagesUploaded={images.length}\n        onClick={onPredictPressed}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Segment } from \"semantic-ui-react\";\nimport { Result } from \"./Result\";\nimport { WelcomeElement } from \"./WelcomeElement\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport { isBrowser } from \"react-device-detect\";\nimport ThemeContext from \"../context/ThemeContext\";\nimport imageCompression from \"browser-image-compression\";\n\nexport const Body = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { status, setStatus, setError } = props;\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [response, setResponse] = useState();\n\n  useEffect(() => {\n    setStatus(\"AWAIT\");\n  }, [uploadedImages, setStatus]);\n\n  const handleImageUploaded = (event) => {\n    event.preventDefault();\n    // Append image to list of images\n    setUploadedImages((prevImages) => {\n      let files = [...prevImages, ...event.target.files];\n      return files;\n    });\n  };\n\n  const handlePredictPressed = () => {\n    const data = new FormData();\n    const options = { maxWidthOrHeight: 300 };\n    setStatus(\"LOADING\");\n    const compressions = uploadedImages.map((img) =>\n      imageCompression(img, options)\n    );\n    Promise.all(compressions)\n      .then((compressedImages) => {\n        compressedImages.forEach((img) => {\n          data.append(\"file[]\", img);\n        });\n        fetch(\"/predict\", {\n          method: \"POST\",\n          body: data,\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setResponse(data);\n            setStatus(\"FINISHED\");\n          })\n          .catch((err) => {\n            console.error(err);\n            setStatus(\"AWAIT\");\n            setError(true);\n          });\n      })\n      // TODO: custom error message\n      .catch((err) => {\n        console.error(err);\n        setStatus(\"AWAIT\");\n        setError(true);\n      });\n  };\n\n  const handleRemovePressed = (index) => {\n    if (index === -1) return;\n    const images = Array.from(uploadedImages);\n    images.splice(index, 1);\n    setUploadedImages(images);\n  };\n\n  let content;\n  if (status !== \"AWAIT\") {\n    content = (\n      <Result\n        loading={status === \"LOADING\"}\n        response={response}\n        onBackClicked={() => setStatus(\"AWAIT\")}\n      />\n    );\n  } else if (uploadedImages.length) {\n    content = (\n      <ImageCarousel\n        images={uploadedImages}\n        onPredictPressed={handlePredictPressed}\n        onAddPressed={handleImageUploaded}\n        handleRemovePressed={handleRemovePressed}\n        allowCamera={!isBrowser}\n      />\n    );\n  } else {\n    content = (\n      <WelcomeElement\n        allowCamera={!isBrowser}\n        onClick={handleImageUploaded}\n        darkMode={darkMode}\n      />\n    );\n  }\n  return (\n    <Segment\n      placeholder\n      inverted={darkMode}\n      style={\n        darkMode ? { backgroundColor: \"#303030\", borderColor: \"#454545\" } : null\n      }\n      content={content}\n    />\n  );\n};\n","import { Message, Transition, Container } from \"semantic-ui-react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ErrorMessage = (props) => {\n  const { visible } = props;\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const { t } = useTranslation();\n  const styleDesktop = {\n    position: \"absolute\",\n    width: \"20vw\",\n    bottom: \"1em\",\n    right: \"1em\",\n    opacity: 0.9,\n  };\n  const styleMobile = {\n    position: \"fixed\",\n    width: \"100%\",\n    top: 70,\n    left: 0,\n    right: 0,\n    opacity: 0.9,\n    zIndex: 2, // raise above Steps component\n  };\n\n  const animation = isDesktopOrLaptop ? \"fade left\" : \"fade down\";\n  const style = isDesktopOrLaptop ? styleDesktop : styleMobile;\n  return (\n    <Transition visible={visible} animation={animation} duration={500}>\n      <Container style={style}>\n        <Message negative>\n          <Message.Header>{t(\"server_error\")}</Message.Header>\n          <p>{t(\"retry_later\")}</p>\n        </Message>\n      </Container>\n    </Transition>\n  );\n};\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // bind react-i18next to the instance\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n    defaultNS: \"translations\",\n    keySeparator: false,\n    react: {\n      wait: true,\n    },\n    resources: {\n      en: {\n        translations: {\n          motto: \"Say No to Unripe Avocados.\",\n\n          upload: \"Upload\",\n          predict: \"Predict\",\n          upload_extra: \"Upload more images?\",\n          upload_extra_detail:\n            \"Uploading an extra image can improve prediction. Would you like to do so?\",\n          no: \"No\",\n          yes: \"Yes\",\n\n          server_error: \"Server error\",\n          retry_later: \"Please try again later\",\n\n          why: \"Why?\",\n          author: \"Author\",\n          motivation:\n            \"I struggle to tell ripe avocados from unripe ones, so I trained a deep learning model based on the {{model}} with a {{accuracy}} accuracy to help with the task. Hope it can help you too 😊\",\n          cookie_use: \"This website doesn't use 🍪\",\n          contact: \"Contact\",\n          get_in_touch:\n            \"Get in touch if you have any requests or suggestions 👍🏼\",\n\n          take_picture: \"Take a picture\",\n          upload_image: \"Upload an image\",\n          or: \"Or\",\n\n          loading: \"Loading\",\n          avocado_ripe: \"ripe\",\n          avocado_unripe: \"unripe\",\n          with_probability: \"with a {{probability}}% probability\",\n          this_avocado: \"This 🥑 is\",\n          cannot_spot: \"Sorry, I was unable to spot any 🥑\",\n          retake_photo: \"Could you try retaking the photo?\",\n          back: \"Back\",\n          what_means: \"What does this mean?\",\n          what_means_explanation:\n            \"The percentage indicates to what extent the 'AI' is certain about its prediction. It does not quantify the ripeness of the 🥑 as such.\",\n        },\n      },\n      sk: {\n        translations: {\n          motto: \"Povedz nie nezrelým avokádam.\",\n\n          upload: \"Nahrať\",\n          predict: \"Predpovedať\",\n          upload_extra: \"Nahrať viac fotiek?\",\n          upload_extra_detail:\n            \"Nahraj ešte jednu fotku a zlepši tak predikciu. Ideš do toho?\",\n          no: \"Nie\",\n          yes: \"Áno\",\n\n          server_error: \"Chyba serveru\",\n          retry_later: \"Skús to neskôr, prosím\",\n\n          author: \"Autor\",\n          why: \"Ale... načo?\",\n          motivation:\n            \"Často neviem rozoznať zrelé avokádo od nezrelého, tak som sa rozhodol natrénovať model pomocou hlbokého učenia, aby mi s tým pomohol. Model je postavený na modeli {{model}} a má {{accuracy}} presnosť. Dúfam, že pomôže aj tebe 😊\",\n          cookie_use: \"Táto stránka nepoužíva 🍪\",\n          contact: \"Kontakt\",\n          get_in_touch: \"Ak máš nápad na zlepšenie, tak ma určite kontaktuj 👍🏼\",\n\n          upload_image: \"Nahraj fotku\",\n          take_picture: \"Odfoť fotku\",\n          or: \"Alebo\",\n\n          loading: \"Načítavam\",\n          avocado_ripe: \"zrelé\",\n          avocado_unripe: \"nezrelé\",\n          with_probability: \"s {{probability}}% pravdepodobnosťou\",\n          this_avocado: \"Toto 🥑 je\",\n          cannot_spot: \"Nevidím žiadne 🥑\",\n          retake_photo: \"Odfotil(a) by si ho ešte raz, prosím?\",\n          back: \"Spať\",\n          what_means: \"Čo to znamená?\",\n          what_means_explanation:\n            \"Percento znázorňuje do akej miery si je 'umelá inteligencia' istá svojou predikciou. Nejde teda o mieru zrelosti 🥑\",\n        },\n      },\n    },\n  });\n\nexport default i18n;\n","import React, { useEffect, useState } from \"react\";\nimport { Header, Image, Segment } from \"semantic-ui-react\";\nimport avocado from \"./avocado.PNG\";\nimport { Footer } from \"./components/Footer\";\nimport { MenuBar } from \"./components/MenuBar\";\nimport { Body } from \"./components/Body\";\nimport { ErrorMessage } from \"./components/ErrorMessage\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"./i18next\";\nimport ThemeContext from \"./context/ThemeContext\";\n\nconst App = () => {\n  const [status, setStatus] = useState(\"AWAIT\"); // Possible values: AWAIT  | LOADING | FINISHED\n  const [error, setError] = useState(false);\n  const { t } = useTranslation();\n  const [darkMode, setDarkMode] = useState();\n\n  useEffect(() => {\n    // Fetch user preference on dark mode\n    const prefers_dm =\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    setDarkMode(prefers_dm);\n  }, []);\n\n  // Listen for user preference on dark mode\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", ({ matches }) => {\n      setDarkMode(matches);\n    });\n\n  useEffect(() => {\n    if (!error) return;\n    const timer = setTimeout(() => setError(false), 2500);\n    return () => clearTimeout(timer);\n  }, [error]);\n\n  const setLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\n      <Segment\n        inverted={darkMode}\n        basic\n        padded={\"very\"}\n        textAlign=\"center\"\n        style={{\n          paddingTop: \"5em\",\n          display: \"flex\",\n          minHeight: \"100vh\",\n          flexDirection: \"column\",\n          margin: 0,\n        }}\n      >\n        <MenuBar setLanguage={setLanguage} />\n        <Image centered src={avocado} size=\"small\" />\n        <Header as=\"h1\">Know Your Avocado!</Header>\n        <p>{t(\"motto\")}</p>\n        <Body status={status} setStatus={setStatus} setError={setError} />\n      </Segment>\n      <ErrorMessage visible={error} />\n      <Footer />\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, Spinner } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<Spinner />}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}