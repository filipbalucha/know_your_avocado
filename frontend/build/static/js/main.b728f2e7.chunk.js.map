{"version":3,"sources":["avocado.PNG","context/ThemeContext.js","components/Footer.js","components/LanguageDropdown.js","components/DarkModeToggle.js","components/MenuBar.js","components/Result.js","components/WelcomeElement.js","components/ImageCarousel.js","components/Body.js","components/ErrorMessage.js","i18next.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","year","Date","getFullYear","Footer","props","t","useTranslation","darkMode","useContext","useState","accuracy","setAccuracy","fetch","method","then","res","json","val","Math","round","catch","err","console","error","style","padding","width","bottom","flex","borderTop","Segment","inverted","vertical","Container","Grid","divided","stackable","Row","Column","Header","as","content","model","List","horizontal","verticalAlign","Item","href","Icon","name","LanguageDropdown","Form","Dropdown","item","button","text","options","key","value","onChange","_","setLanguage","DarkModeToggle","setDarkMode","margin","Fragment","Checkbox","checked","toggle","MenuBar","underlineColor","Menu","borderless","fixed","borderBottom","header","Image","size","src","avocado","marginRight","position","Graph","response","result","summary","probability","toFixed","ripeness","category","data","labels","categories","map","cat","datasets","backgroundColor","borderWidth","probabilities","textAlign","columns","Popup","trigger","basic","height","maintainAspectRatio","events","legend","display","plugins","render","fontColor","fontSize","NotVisibleMessage","ButtonBack","onClick","Button","animated","Content","visible","hidden","Result","out","loading","onBackClicked","Loader","active","fruit_visible","TakePicture","htmlFor","id","type","accept","capture","UploadImage","multiple","WelcomeElement","allowCamera","Divider","icon","cameraInputRef","useRef","current","click","ref","imageInputRef","AddPhoto","flowing","hoverable","mouseEnterDelay","mouseLeaveDelay","ImageCarousel","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","images","onPredictPressed","onAddPressed","imageUrls","setImageUrls","useEffect","forEach","url","URL","revokeObjectURL","urls","image","createObjectURL","RemoveButton","color","circular","top","left","PredictButton","modalOpen","setModalOpen","fluid","numImagesUploaded","Modal","open","onClose","Actions","imageUrl","index","centered","rounded","handleRemovePressed","length","Body","status","setStatus","setError","uploadedImages","setUploadedImages","setResponse","handleImageUploaded","event","preventDefault","prevImages","files","target","fileNames","file","filter","i","indexOf","FormData","append","body","Array","from","splice","isBrowser","placeholder","borderColor","ErrorMessage","animation","right","opacity","zIndex","Transition","duration","Message","negative","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","react","wait","resources","en","translations","motto","upload","predict","upload_extra","upload_extra_detail","no","yes","server_error","retry_later","why","author","motivation","cookie_use","contact","get_in_touch","take_picture","upload_image","or","avocado_ripe","avocado_unripe","with_probability","this_avocado","cannot_spot","retake_photo","back","sk","App","prefers_dm","window","matchMedia","matches","addEventListener","timer","setTimeout","clearTimeout","Provider","padded","paddingTop","minHeight","flexDirection","language","changeLanguage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.b728f2e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avocado.5eb1992f.PNG\";","import { createContext } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport default ThemeContext;\n","import { useState, useContext } from \"react\";\nimport {\n  Segment,\n  Container,\n  Icon,\n  Grid,\n  Header,\n  List,\n} from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst URL_LINKEDIN = \"https://www.linkedin.com/in/filip-balucha/\";\nconst URL_GITHUB = \"https://github.com/filipbalucha\";\nconst URL_FACEBOOK = \"https://www.facebook.com/filiposlav\";\nconst EMAIL = \"balucha.filip2@gmail.com\";\nconst model = \"ResNet-18 CNN\";\nvar year = new Date().getFullYear();\n\nexport const Footer = (props) => {\n  const { t } = useTranslation();\n  const { darkMode } = useContext(ThemeContext);\n\n  const [accuracy, setAccuracy] = useState(null);\n  const to_percent = (val) => Math.round(val * 100) + \"%\";\n  fetch(\"/model_accuracy\", {\n    method: \"GET\",\n  })\n    .then((res) => res.json())\n    .then(({ accuracy }) => {\n      setAccuracy(to_percent(accuracy));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  const style = {\n    padding: \"1.5em 0em\",\n    width: \"100%\",\n    bottom: 0,\n    flex: 1,\n  };\n  if (darkMode) {\n    style.borderTop = \"1px solid #C5844B\";\n  }\n  return (\n    <Segment inverted vertical style={style}>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content={t(\"author\")} />\n              <p>Filip Balucha &copy;{year}</p>\n            </Grid.Column>\n\n            <Grid.Column width={7}>\n              <Header as=\"h4\" inverted content={t(\"why\")} />\n\n              <p>{t(\"motivation\", { model, accuracy })}</p>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"Cookies\" />\n              <p>{t(\"cookie_use\")}</p>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" inverted content={t(\"contact\")} />\n              <List horizontal inverted verticalAlign=\"middle\">\n                <List.Item href={URL_LINKEDIN}>\n                  <Icon name=\"linkedin\" />\n                </List.Item>\n                <List.Item href={URL_GITHUB}>\n                  <Icon name=\"github\" />\n                </List.Item>\n                <List.Item href={URL_FACEBOOK}>\n                  <Icon name=\"facebook\" />\n                </List.Item>\n                <List.Item href={`mailto: ${EMAIL}`}>\n                  <Icon name=\"mail\" />\n                </List.Item>\n              </List>\n              <p>{t(\"get_in_touch\")}</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n","import { useContext } from \"react\";\nimport { Icon, Form } from \"semantic-ui-react\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const LanguageDropdown = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const languageOptions = [\n    { key: \"English\", text: \"EN 🇬🇧\", value: \"gb\" },\n    { key: \"Slovak\", text: \"SK 🇸🇰\", value: \"sk\" },\n  ];\n  return (\n    <Form.Dropdown\n      inverted\n      item\n      button\n      text={<Icon name=\"world\" />}\n      options={languageOptions}\n      onChange={(_, { value }) => props.setLanguage(value)}\n      // style={darkMode ? { backgroundColor: \"red !important\" } : null}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Checkbox, Icon } from \"semantic-ui-react\";\nimport \"../css/Toggle.css\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const DarkModeToggle = (props) => {\n  const { darkMode, setDarkMode } = useContext(ThemeContext);\n  const style = { margin: 10 };\n  return (\n    <React.Fragment>\n      <Icon name=\"sun\" style={style} />\n      <Checkbox\n        checked={darkMode}\n        toggle\n        onChange={(_, { checked }) => setDarkMode(checked)}\n      />\n      <Icon name=\"moon\" style={style} />\n    </React.Fragment>\n  );\n};\n","import { useContext } from \"react\";\nimport { Image, Menu, Container } from \"semantic-ui-react\";\nimport { LanguageDropdown } from \"./LanguageDropdown\";\nimport { DarkModeToggle } from \"./DarkModeToggle\";\nimport avocado from \"../avocado.PNG\";\nimport \"../css/Toggle.css\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const MenuBar = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const underlineColor = darkMode ? \"#C5844B\" : \"#d2d880\";\n  return (\n    <Menu\n      inverted={darkMode}\n      borderless\n      fixed=\"top\"\n      style={{\n        borderBottom: `1px solid ${underlineColor}`,\n      }}\n    >\n      <Container>\n        <Menu.Item header>\n          <Image size=\"mini\" src={avocado} style={{ marginRight: \"1.5em\" }} />\n          KYA!\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <DarkModeToggle />\n        </Menu.Item>\n        <Menu.Item>\n          <LanguageDropdown setLanguage={props.setLanguage} />\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Grid,\n  Loader,\n  Header,\n  Popup,\n  Segment,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\nimport \"chartjs-plugin-labels\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst Graph = (props) => {\n  const { result, summary } = props.response;\n  const { t } = useTranslation();\n\n  const to_percentage = (val) => (val * 100).toFixed(2);\n  const probability = to_percentage(result.probability);\n\n  const ripeness = t(result.category);\n  const data = {\n    labels: summary.categories.map((cat) => t(cat)),\n    datasets: [\n      {\n        backgroundColor: [\"#d9a26f\", \"#b5ba6a\"],\n        borderWidth: 1,\n        data: summary.probabilities,\n      },\n    ],\n  };\n  return (\n    <Grid textAlign=\"center\" columns=\"equal\">\n      <Grid.Row>\n        <Popup\n          content={\n            \"The percentage indicates to what extent the 'AI' is certain about its prediction. It does not quantify the ripeness of the 🥑 as such.\"\n          }\n          header={\"What does this mean?\"}\n          trigger={\n            <Segment basic>\n              <Header as=\"h3\" content={t()}>\n                {t(\"this_avocado\")} <i>{ripeness}</i>\n              </Header>\n              <p>{t(\"with_probability\", { probability })}</p>\n            </Segment>\n          }\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <Segment basic style={{ height: \"30vh\" }}>\n          <Pie\n            data={data}\n            options={{\n              maintainAspectRatio: false,\n              events: [], // disable everything on hover\n              legend: {\n                display: false,\n              },\n              plugins: {\n                labels: {\n                  render: \"label\",\n                  fontColor: \"white\",\n                  fontSize: 16,\n                },\n              },\n            }}\n          />\n        </Segment>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst NotVisibleMessage = (props) => {\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Header as=\"h3\" content={t(\"cannot_spot\")} />\n      <p>{t(\"retake_photo\")}</p>\n    </React.Fragment>\n  );\n};\n\nconst ButtonBack = ({ onClick }) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <Button animated inverted={darkMode} onClick={onClick}>\n      <Button.Content visible content={t(\"back\")} />\n      <Button.Content hidden>\n        <Icon name=\"arrow left\" />\n      </Button.Content>\n    </Button>\n  );\n};\n\nexport const Result = (props) => {\n  const { loading, onBackClicked } = props;\n  const { t } = useTranslation();\n\n  if (loading) return <Loader active content={t(\"loading\")} />;\n\n  let out;\n  if (props.response.fruit_visible) {\n    out = <Graph {...props} />;\n  } else {\n    out = <NotVisibleMessage />;\n  }\n  return (\n    <React.Fragment>\n      {out}\n      <ButtonBack onClick={onBackClicked} />\n    </React.Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Button,\n  Header,\n  Divider,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst TakePicture = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Button\n        as=\"label\"\n        htmlFor=\"cameraInput\"\n        content={t(\"take_picture\")}\n        inverted={darkMode}\n      />\n      <input\n        id=\"cameraInput\"\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        hidden\n        onChange={props.onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst UploadImage = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <React.Fragment>\n      <Button\n        as=\"label\"\n        htmlFor=\"libraryInput\"\n        content={t(\"upload_image\")}\n        inverted={darkMode}\n      />\n      <input\n        id=\"libraryInput\"\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={props.onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const WelcomeElement = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  const { allowCamera, onClick } = props;\n  let element;\n  if (!allowCamera) {\n    element = (\n      <Segment basic>\n        <Header icon>\n          <Icon name=\"images\" inverted={darkMode} />\n        </Header>\n        <UploadImage onClick={onClick} />\n      </Segment>\n    );\n  } else {\n    element = (\n      <Grid columns={2} textAlign=\"center\">\n        <Divider inverted={darkMode} vertical content={t(\"or\")} />\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"photo\" inverted={darkMode} />\n            </Header>\n            <TakePicture onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"images\" inverted={darkMode} />\n            </Header>\n            <UploadImage onClick={onClick} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return element;\n};\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport {\n  Button,\n  List,\n  Grid,\n  Divider,\n  Segment,\n  Image,\n  Icon,\n  Popup,\n  Modal,\n  Header,\n} from \"semantic-ui-react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from \"react-i18next\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst TakePicture = ({ onClick }) => {\n  const cameraInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button\n        inverted\n        icon=\"camera\"\n        onClick={() => cameraInputRef.current.click()}\n      />\n      <input\n        ref={cameraInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst UploadImage = ({ onClick, icon }) => {\n  const imageInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button\n        inverted\n        icon={icon}\n        onClick={() => imageInputRef.current.click()}\n      />\n      <input\n        ref={imageInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst AddPhoto = ({ allowCamera, onClick }) => {\n  const { darkMode } = useContext(ThemeContext);\n  if (!allowCamera) {\n    return <UploadImage onClick={onClick} icon=\"plus\" />;\n  } else {\n    return (\n      <Popup\n        trigger={<Button icon=\"plus\" />}\n        flowing\n        hoverable\n        inverted={darkMode}\n        mouseEnterDelay={150}\n        mouseLeaveDelay={150}\n      >\n        <Grid divided columns=\"equal\">\n          <Grid.Column>\n            <TakePicture onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <UploadImage onClick={onClick} icon=\"image\" />\n          </Grid.Column>\n        </Grid>\n      </Popup>\n    );\n  }\n};\n\nexport const ImageCarousel = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const MAX_IMAGES = 4;\n  const { images, onPredictPressed, onAddPressed, allowCamera } = props;\n  const [imageUrls, setImageUrls] = useState([]);\n\n  useEffect(() => {\n    // Revoke URLs to prevent memory leaks\n    // Source: post by Enioluwa Segun @https://stackoverflow.com/questions/57315551/react-uploading-multiple-images\n    imageUrls.forEach((url) => URL.revokeObjectURL(url));\n    const urls = images.map((image) => URL.createObjectURL(image));\n    setImageUrls(urls);\n  }, [images]);\n\n  const RemoveButton = (props) => {\n    return (\n      <Button\n        inverted\n        size=\"medium\"\n        icon=\"trash alternate\"\n        color=\"red\"\n        circular\n        style={{\n          position: \"absolute\",\n          top: 20,\n          left: 20,\n        }}\n        onClick={props.onClick}\n      />\n    );\n  };\n\n  const PredictButton = (props) => {\n    const { darkMode } = useContext(ThemeContext);\n    const { t } = useTranslation();\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const predict = () => {\n      if (props.numImagesUploaded < 2) setModalOpen(true);\n      else props.onClick();\n    };\n    return (\n      <React.Fragment>\n        <Button inverted={darkMode} fluid animated onClick={predict}>\n          <Button.Content visible content={t(\"predict\")} />\n          <Button.Content hidden content={<Icon name=\"arrow right\" />} />\n        </Button>\n        <Modal size=\"tiny\" open={modalOpen} onClose={() => setModalOpen(false)}>\n          <Header icon=\"camera\" content={t(\"upload_extra\")} />\n          <Modal.Content>\n            <p>{t(\"upload_extra_detail\")}</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color=\"red\"\n              onClick={() => {\n                setModalOpen(false);\n                props.onClick();\n              }}\n            >\n              <Icon name=\"remove\" /> {t(\"no\")}\n            </Button>\n            <Button color=\"green\" onClick={() => setModalOpen(false)}>\n              <Icon name=\"checkmark\" /> {t(\"yes\")}\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <List horizontal={isDesktopOrLaptop} verticalAlign=\"middle\">\n        {imageUrls.map((imageUrl, index) => (\n          <List.Item key={index}>\n            <Image />\n            <List.Content>\n              <Segment basic>\n                <Image centered rounded src={imageUrl} size=\"medium\" />\n                <RemoveButton\n                  onClick={() => props.handleRemovePressed(index)}\n                />\n              </Segment>\n            </List.Content>\n          </List.Item>\n        ))}\n        {images.length < MAX_IMAGES && (\n          <List.Item>\n            <Image />\n            <List.Content>\n              <AddPhoto allowCamera={allowCamera} onClick={onAddPressed} />\n            </List.Content>\n          </List.Item>\n        )}\n      </List>\n      <Divider />\n      <PredictButton\n        numImagesUploaded={images.length}\n        onClick={onPredictPressed}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Segment } from \"semantic-ui-react\";\nimport { Result } from \"./Result\";\nimport { WelcomeElement } from \"./WelcomeElement\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport { isBrowser } from \"react-device-detect\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nexport const Body = (props) => {\n  const { darkMode } = useContext(ThemeContext);\n  const { status, setStatus, setError } = props;\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [response, setResponse] = useState();\n\n  useEffect(() => {\n    setStatus(\"AWAIT\");\n  }, [uploadedImages, setStatus]);\n\n  const handleImageUploaded = (event) => {\n    event.preventDefault();\n    // Append image to list of images\n    setUploadedImages((prevImages) => {\n      let files = [...prevImages, ...event.target.files];\n      const fileNames = files.map((file) => file.name);\n      // Drop duplicate files\n      files = files.filter((file, i) => fileNames.indexOf(file.name) === i);\n      return files;\n    });\n  };\n\n  const handlePredictPressed = () => {\n    const data = new FormData();\n    uploadedImages.forEach((image, i) => {\n      data.append(\"file[]\", image);\n    });\n    setStatus(\"LOADING\");\n    fetch(\"/predict\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setResponse(data);\n        setStatus(\"FINISHED\");\n      })\n      .catch((err) => {\n        console.error(err);\n        setStatus(\"AWAIT\");\n        setError(true);\n      });\n  };\n\n  const handleRemovePressed = (index) => {\n    if (index === -1) return;\n    const images = Array.from(uploadedImages);\n    images.splice(index, 1);\n    setUploadedImages(images);\n  };\n\n  let content;\n  if (status !== \"AWAIT\") {\n    content = (\n      <Result\n        loading={status === \"LOADING\"}\n        response={response}\n        onBackClicked={() => setStatus(\"AWAIT\")}\n      />\n    );\n  } else if (uploadedImages.length) {\n    content = (\n      <ImageCarousel\n        images={uploadedImages}\n        onPredictPressed={handlePredictPressed}\n        onAddPressed={handleImageUploaded}\n        handleRemovePressed={handleRemovePressed}\n        allowCamera={!isBrowser}\n      />\n    );\n  } else {\n    content = (\n      <WelcomeElement\n        allowCamera={!isBrowser}\n        onClick={handleImageUploaded}\n        darkMode={darkMode}\n      />\n    );\n  }\n  return (\n    <Segment\n      placeholder\n      inverted={darkMode}\n      style={\n        darkMode ? { backgroundColor: \"#303030\", borderColor: \"#454545\" } : null\n      }\n      content={content}\n    />\n  );\n};\n","import { Message, Transition, Container } from \"semantic-ui-react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ErrorMessage = (props) => {\n  const { visible } = props;\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const { t } = useTranslation();\n  const styleDesktop = {\n    position: \"absolute\",\n    width: \"20vw\",\n    bottom: \"1em\",\n    right: \"1em\",\n    opacity: 0.9,\n  };\n  const styleMobile = {\n    position: \"fixed\",\n    width: \"100%\",\n    top: 15,\n    left: 0,\n    right: 0,\n    opacity: 0.9,\n    zIndex: 2, // raise above Steps component\n  };\n\n  const animation = isDesktopOrLaptop ? \"fade left\" : \"fade down\";\n  const style = isDesktopOrLaptop ? styleDesktop : styleMobile;\n  return (\n    <Transition visible={visible} animation={animation} duration={500}>\n      <Container style={style}>\n        <Message negative>\n          <Message.Header>{t(\"server_error\")}</Message.Header>\n          <p>{t(\"retry_later\")}</p>\n        </Message>\n      </Container>\n    </Transition>\n  );\n};\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// TODO: use Backend like in: https://react.i18next.com/latest/i18next-instance ?\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // bind react-i18next to the instance\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n    defaultNS: \"translations\",\n    keySeparator: false,\n    react: {\n      wait: true,\n    },\n    resources: {\n      en: {\n        translations: {\n          motto: \"Say No to Unripe Avocados.\",\n\n          upload: \"Upload\",\n          predict: \"Predict\",\n          upload_extra: \"Upload more images?\",\n          upload_extra_detail:\n            \"Uploading an extra image can improve prediction. Would you like to do so?\",\n          no: \"No\",\n          yes: \"Yes\",\n\n          server_error: \"Server error\",\n          retry_later: \"Please try again later\",\n\n          why: \"Why?\",\n          author: \"Author\",\n          motivation:\n            \"I struggle to tell ripe avocados from unripe ones, so I trained a deep learning model based on the {{model}} with a {{accuracy}} accuracy to help with the task. Hope it can help you too 😊\",\n          cookie_use: \"This website doesn't use 🍪\",\n          contact: \"Contact\",\n          get_in_touch:\n            \"Get in touch if you have any requests or suggestions 👍🏼\",\n\n          take_picture: \"Take a picture\",\n          upload_image: \"Upload an image\",\n          or: \"Or\",\n\n          loading: \"Loading\",\n          avocado_ripe: \"ripe\",\n          avocado_unripe: \"unripe\",\n          with_probability: \"with a {{probability}}% probability\",\n          this_avocado: \"This 🥑 is\",\n          cannot_spot: \"Sorry, I was unable to spot any 🥑\",\n          retake_photo: \"Could you try retaking the photo?\",\n          back: \"Back\",\n        },\n      },\n      sk: {\n        translations: {\n          motto: \"Povedz nie nezrelým avokádam.\",\n\n          upload: \"Nahrať\",\n          predict: \"Predpovedať\",\n          upload_extra: \"Nahrať viac fotiek?\",\n          upload_extra_detail:\n            \"Nahraj ešte jednu fotku a zlepši tak predikciu. Ideš do toho?\",\n          no: \"Nie\",\n          yes: \"Áno\",\n\n          server_error: \"Chyba serveru\",\n          retry_later: \"Skús to neskôr, prosím\",\n\n          author: \"Autor\",\n          why: \"Ale... načo?\",\n          motivation:\n            \"Často neviem rozoznať zrelé avokádo od nezrelého, tak som sa rozhodol natrénovať model pomocou hlbokého učenia, aby mi s tým pomohol. Model je postavený na modeli {{model}} a má {{accuracy}} presnosť. Dúfam, že pomôže aj tebe 😊\",\n          cookie_use: \"Táto stránka nepoužíva 🍪\",\n          contact: \"Kontakt\",\n          get_in_touch: \"Ak máš nápad na zlepšenie, tak ma určite kontaktuj 👍🏼\",\n\n          upload_image: \"Nahraj fotku\",\n          take_picture: \"Odfoť fotku\",\n          or: \"Alebo\",\n\n          loading: \"Načítavam\",\n          avocado_ripe: \"zrelé\",\n          avocado_unripe: \"nezrelé\",\n          with_probability: \"s {{probability}}% pravdepodobnosťou\",\n          this_avocado: \"Toto 🥑 je\",\n          cannot_spot: \"Nevidím žiadne 🥑\",\n          retake_photo: \"Odfotil(a) by si ho ešte raz, prosím?\",\n          back: \"Spať\",\n        },\n      },\n    },\n  });\n\nexport default i18n;\n","import React, { useEffect, useState } from \"react\";\nimport { Header, Image, Segment } from \"semantic-ui-react\";\nimport avocado from \"./avocado.PNG\";\nimport { Footer } from \"./components/Footer\";\nimport { Steps } from \"./components/Steps\";\nimport { MenuBar } from \"./components/MenuBar\";\nimport { Body } from \"./components/Body\";\nimport { ErrorMessage } from \"./components/ErrorMessage\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"./i18next\";\nimport ThemeContext from \"./context/ThemeContext\";\n\nconst App = () => {\n  const [status, setStatus] = useState(\"AWAIT\");\n  const [error, setError] = useState(false);\n  const { t } = useTranslation();\n  const [darkMode, setDarkMode] = useState();\n\n  useEffect(() => {\n    // Fetch user preference on dark mode\n    const prefers_dm =\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    setDarkMode(prefers_dm);\n  }, []);\n\n  // Listen for user preference on dark mode\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", ({ matches }) => {\n      setDarkMode(matches);\n    });\n\n  useEffect(() => {\n    if (!error) return;\n    const timer = setTimeout(() => setError(false), 2500);\n    return () => clearTimeout(timer);\n  }, [error]);\n\n  const setLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\n      <Segment\n        inverted={darkMode}\n        basic\n        padded={\"very\"}\n        textAlign=\"center\"\n        style={{\n          paddingTop: \"5em\",\n          display: \"flex\",\n          minHeight: \"100vh\",\n          flexDirection: \"column\",\n          margin: 0,\n        }}\n      >\n        <MenuBar setLanguage={setLanguage} />\n        <Image centered src={avocado} size=\"small\" />\n        <Header as=\"h1\">Know Your Avocado!</Header>\n        <p>{t(\"motto\")}</p>\n        {/* <Steps status={status} handleUploadClicked={() => setStatus(\"AWAIT\")} /> */}\n        <Body status={status} setStatus={setStatus} setError={setError} />\n      </Segment>\n      <ErrorMessage visible={error} />\n      <Footer />\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, Spinner } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<Spinner />}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}