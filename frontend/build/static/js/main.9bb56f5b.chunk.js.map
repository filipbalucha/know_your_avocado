{"version":3,"sources":["avocado.PNG","components/Result.js","components/Footer.js","components/WelcomeElement.js","components/ImageCarousel.js","components/Steps.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","props","response","result","summary","probability","toFixed","ripeness","category","replace","data","labels","categories","map","cat","datasets","backgroundColor","borderWidth","probabilities","Grid","textAlign","columns","Row","Popup","content","header","trigger","Segment","basic","Header","as","style","height","options","maintainAspectRatio","events","legend","display","plugins","render","fontColor","fontSize","NotVisibleMessage","Fragment","ButtonBack","onClick","Button","animated","Content","visible","hidden","Icon","name","Result","out","loading","onBackClicked","placeholder","Loader","active","fruit_visible","year","Date","getFullYear","Footer","inverted","vertical","padding","width","bottom","flex","Container","divided","stackable","Column","List","horizontal","verticalAlign","Item","href","TakePicture","htmlFor","id","type","accept","capture","onChange","UploadImage","multiple","WelcomeElement","element","allowCamera","Divider","icon","cameraInputRef","useRef","current","click","ref","imageInputRef","AddPhoto","flowing","hoverable","mouseEnterDelay","mouseLeaveDelay","ImageCarousel","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","images","onPredictPressed","onAddPressed","useState","imageUrls","setImageUrls","useEffect","forEach","url","URL","revokeObjectURL","urls","image","createObjectURL","RemoveButton","size","color","circular","position","top","left","PredictButton","numImagesUploaded","modalOpen","setModalOpen","fluid","Modal","open","onClose","Actions","imageUrl","index","Image","centered","rounded","src","onRemovePressed","length","Steps","status","Step","Group","unstackable","Title","App","uploadedImages","setUploadedImages","setStatus","setResponse","error","setError","timer","setTimeout","clearTimeout","handleImageUploaded","event","preventDefault","prevImages","target","files","handlePredictPressed","FormData","i","append","fetch","method","body","then","res","json","catch","err","console","ErrorMessage","Transition","animation","duration","right","Message","negative","handleImageRemoved","Array","from","splice","Body","isBrowser","padded","minHeight","flexDirection","margin","avocado","handleUploadClicked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+PAAe,MAA0B,oC,8DCanCA,G,OAAQ,SAACC,GAAW,IAAD,EACKA,EAAMC,SAA1BC,EADe,EACfA,OAAQC,EADO,EACPA,QAEVC,GADgC,IACJF,EAAOE,aADEC,QAAQ,GAG7CC,EAAWJ,EAAOK,SAASC,QAAQ,WAAY,IAC/CC,EAAO,CACXC,OAAQP,EAAQQ,WAAWC,KAAI,SAACC,GAAD,OAASA,EAAIL,QAAQ,WAAY,OAChEM,SAAU,CACR,CACEC,gBAAiB,CAAC,UAAW,WAC7BC,YAAa,EACbP,KAAMN,EAAQc,iBAIpB,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,SAASC,QAAQ,QAAjC,UACE,cAACF,EAAA,EAAKG,IAAN,UACE,cAACC,EAAA,EAAD,CACEC,QACE,mJAEFC,OAAQ,uBACRC,QACE,eAACC,EAAA,EAAD,CAASC,OAAK,EAAd,UACE,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,kCACa,4BAAIvB,OAEjB,wCAAWF,EAAX,0BAKR,cAACc,EAAA,EAAKG,IAAN,UACE,cAACK,EAAA,EAAD,CAASC,OAAK,EAACG,MAAO,CAAEC,OAAQ,QAAhC,SACE,cAAC,MAAD,CACEtB,KAAMA,EACNuB,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,GACRC,OAAQ,CACNC,SAAS,GAEXC,QAAS,CACP3B,OAAQ,CACN4B,OAAQ,QACRC,UAAW,QACXC,SAAU,iBAWtBC,EAAoB,SAACzC,GACzB,OACE,eAAC,IAAM0C,SAAP,WACE,cAACd,EAAA,EAAD,CAAQC,GAAG,KAAX,0DACA,sEAKAc,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,eAACC,EAAA,EAAD,CAAQC,UAAQ,EAACF,QAASA,EAA1B,UACE,cAACC,EAAA,EAAOE,QAAR,CAAgBC,SAAO,EAAvB,kBACA,cAACH,EAAA,EAAOE,QAAR,CAAgBE,QAAM,EAAtB,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,qBAKJC,EAAS,SAACpD,GAAW,IAQ5BqD,EAPIC,EAA2BtD,EAA3BsD,QAASC,EAAkBvD,EAAlBuD,cACjB,OAAID,EAEA,cAAC5B,EAAA,EAAD,CAAS8B,aAAW,EAApB,SACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACnC,QAAQ,eAK3B8B,EADErD,EAAMC,SAAS0D,cACX,cAAC,EAAD,eAAW3D,IAEX,cAAC,EAAD,IAGN,eAAC0B,EAAA,EAAD,CAAS8B,aAAW,EAApB,UACGH,EACD,cAAC,EAAD,CAAYT,QAASW,S,SC7FvBK,GAAO,IAAIC,MAAOC,cAETC,EAAS,SAAC/D,GACrB,OACE,cAAC0B,EAAA,EAAD,CACEsC,UAAQ,EACRC,UAAQ,EACRnC,MAAO,CACLoC,QAAS,YACTC,MAAO,OACPC,OAAQ,EACRC,KAAM,GAPV,SAUE,cAACC,EAAA,EAAD,UACE,cAACpD,EAAA,EAAD,CAAMqD,SAAO,EAACP,UAAQ,EAACQ,WAAS,EAAhC,SACE,eAACtD,EAAA,EAAKG,IAAN,WACE,eAACH,EAAA,EAAKuD,OAAN,CAAaN,MAAO,EAApB,UACE,cAACvC,EAAA,EAAD,CAAQoC,UAAQ,EAACnC,GAAG,KAAKN,QAAQ,WACjC,mDAAwBqC,QAE1B,eAAC1C,EAAA,EAAKuD,OAAN,CAAaN,MAAO,GAApB,UACE,cAACvC,EAAA,EAAD,CAAQC,GAAG,KAAKmC,UAAQ,EAAxB,kBAGA,oIA1BA,gBA0BA,gIAOF,eAAC9C,EAAA,EAAKuD,OAAN,CAAaN,MAAO,EAApB,UACE,cAACvC,EAAA,EAAD,CAAQC,GAAG,KAAKmC,UAAQ,EAAxB,qBAGA,eAACU,EAAA,EAAD,CAAMC,YAAU,EAACX,UAAQ,EAACY,cAAc,SAAxC,UACE,cAACF,EAAA,EAAKG,KAAN,CAAWC,KA1CN,6CA0CL,SACE,cAAC5B,EAAA,EAAD,CAAMC,KAAK,eAEb,cAACuB,EAAA,EAAKG,KAAN,CAAWC,KA5CR,kCA4CH,SACE,cAAC5B,EAAA,EAAD,CAAMC,KAAK,aAEb,cAACuB,EAAA,EAAKG,KAAN,CAAWC,KA9CN,sCA8CL,SACE,cAAC5B,EAAA,EAAD,CAAMC,KAAK,eAEb,cAACuB,EAAA,EAAKG,KAAN,CAAWC,KAAI,kBAhDjB,4BAgDE,SACE,cAAC5B,EAAA,EAAD,CAAMC,KAAK,2B,SCnDvB4B,EAAc,SAAC/E,GAAD,OAClB,eAAC,IAAM0C,SAAP,WACE,cAACG,EAAA,EAAD,CAAQhB,GAAG,QAAQmD,QAAQ,cAAczD,QAAQ,mBACjD,uBACE0D,GAAG,cACHC,KAAK,OACLC,OAAO,UACPC,QAAQ,cACRnC,QAAM,EACNoC,SAAUrF,EAAM4C,cAKhB0C,EAAc,SAACtF,GAAD,OAClB,eAAC,IAAM0C,SAAP,WACE,cAACG,EAAA,EAAD,CAAQhB,GAAG,QAAQmD,QAAQ,eAAezD,QAAQ,oBAClD,uBACE0D,GAAG,eACHC,KAAK,OACLC,OAAO,UACPI,UAAQ,EACRtC,QAAM,EACNoC,SAAUrF,EAAM4C,cAKT4C,EAAiB,SAACxF,GAAW,IAEpCyF,EADIC,EAAyB1F,EAAzB0F,YAAa9C,EAAY5C,EAAZ4C,QAgCrB,OApBE6C,EAVGC,EAWD,eAACxE,EAAA,EAAD,CAAME,QAAS,EAAGD,UAAU,SAA5B,UACE,cAACwE,EAAA,EAAD,CAAS1B,UAAQ,EAAjB,gBACA,eAAC/C,EAAA,EAAKG,IAAN,CAAUuD,cAAc,SAAxB,UACE,eAAC1D,EAAA,EAAKuD,OAAN,WACE,cAAC7C,EAAA,EAAD,CAAQgE,MAAI,EAAZ,SACE,cAAC1C,EAAA,EAAD,CAAMC,KAAK,YAEb,cAAC,EAAD,CAAaP,QAASA,OAExB,eAAC1B,EAAA,EAAKuD,OAAN,WACE,cAAC7C,EAAA,EAAD,CAAQgE,MAAI,EAAZ,SACE,cAAC1C,EAAA,EAAD,CAAMC,KAAK,aAEb,cAAC,EAAD,CAAaP,QAASA,aAtB5B,eAAClB,EAAA,EAAD,CAASC,OAAK,EAAd,UACE,cAACC,EAAA,EAAD,CAAQgE,MAAI,EAAZ,SACE,cAAC1C,EAAA,EAAD,CAAMC,KAAK,aAEb,cAAC,EAAD,CAAaP,QAASA,OAwBrB,cAAClB,EAAA,EAAD,CAAS8B,aAAW,EAApB,SAAsBiC,K,kBCzDzBV,EAAc,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QACfiD,EAAiBC,iBAAO,MAC9B,OACE,eAAC,IAAMpD,SAAP,WACE,cAACG,EAAA,EAAD,CAAQ+C,KAAK,SAAShD,QAAS,kBAAMiD,EAAeE,QAAQC,WAC5D,uBACEC,IAAKJ,EACLX,KAAK,OACLC,OAAO,UACPC,QAAQ,cACRnC,QAAM,EACNoC,SAAUzC,QAMZ0C,EAAc,SAAC,GAAuB,IAArB1C,EAAoB,EAApBA,QAASgD,EAAW,EAAXA,KACxBM,EAAgBJ,iBAAO,MAC7B,OACE,eAAC,IAAMpD,SAAP,WACE,cAACG,EAAA,EAAD,CAAQ+C,KAAMA,EAAMhD,QAAS,kBAAMsD,EAAcH,QAAQC,WACzD,uBACEC,IAAKC,EACLhB,KAAK,OACLC,OAAO,UACPI,UAAQ,EACRtC,QAAM,EACNoC,SAAUzC,QAMZuD,EAAW,SAAC,GAA8B,IAA5BT,EAA2B,EAA3BA,YAAa9C,EAAc,EAAdA,QAC/B,OAAK8C,EAID,cAACpE,EAAA,EAAD,CACEG,QAAS,cAACoB,EAAA,EAAD,CAAQ+C,KAAK,SACtBQ,SAAO,EACPC,WAAS,EACTC,gBAAiB,IACjBC,gBAAiB,IALnB,SAOE,eAACrF,EAAA,EAAD,CAAMqD,SAAO,EAACnD,QAAQ,QAAtB,UACE,cAACF,EAAA,EAAKuD,OAAN,UACE,cAAC,EAAD,CAAa7B,QAASA,MAExB,cAAC1B,EAAA,EAAKuD,OAAN,UACE,cAAC,EAAD,CAAa7B,QAASA,EAASgD,KAAK,iBAfrC,cAAC,EAAD,CAAahD,QAASA,EAASgD,KAAK,UAuBlCY,EAAgB,SAACxG,GAC5B,IAAMyG,EAAoBC,wBAAc,CAAEC,eAAgB,OAElDC,EAAwD5G,EAAxD4G,OAAQC,EAAgD7G,EAAhD6G,iBAAkBC,EAA8B9G,EAA9B8G,aAAcpB,EAAgB1F,EAAhB0F,YAHV,EAIJqB,mBAAS,IAJL,mBAI/BC,EAJ+B,KAIpBC,EAJoB,KAMtCC,qBAAU,WAGRF,EAAUG,SAAQ,SAACC,GAAD,OAASC,IAAIC,gBAAgBF,MAC/C,IAAMG,EAAOX,EAAOhG,KAAI,SAAC4G,GAAD,OAAWH,IAAII,gBAAgBD,MACvDP,EAAaM,KACZ,CAACX,IAEJ,IAAMc,EAAe,SAAC1H,GACpB,OACE,cAAC6C,EAAA,EAAD,CACE8E,KAAK,SACL/B,KAAK,SACLgC,MAAM,MACNC,UAAQ,EACR/F,MAAO,CACLgG,SAAU,WACVC,IAAK,GACLC,KAAM,IAERpF,QAAS5C,EAAM4C,WAKfqF,EAAgB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,kBAAmBtF,EAAc,EAAdA,QAAc,EACtBmE,oBAAS,GADa,mBACjDoB,EADiD,KACtCC,EADsC,KAExD,OACE,eAAC,IAAM1F,SAAP,WACE,cAACG,EAAA,EAAD,CACEwF,OAAK,EACLzF,QAAS,WACHsF,EAAoB,EAAGE,GAAa,GACnCxF,KAJT,qBASA,eAAC0F,EAAA,EAAD,CAAOX,KAAK,OAAOY,KAAMJ,EAAWK,QAAS,kBAAMJ,GAAa,IAAhE,UACE,cAACE,EAAA,EAAM1G,OAAP,iCACA,cAAC0G,EAAA,EAAMvF,QAAP,UACE,4GAKF,eAACuF,EAAA,EAAMG,QAAP,WACE,eAAC5F,EAAA,EAAD,CACE+E,MAAM,MACNhF,QAAS,WACPwF,GAAa,GACbxF,KAJJ,UAOE,cAACM,EAAA,EAAD,CAAMC,KAAK,WAPb,SASA,eAACN,EAAA,EAAD,CAAQ+E,MAAM,QAAQhF,QAAS,kBAAMwF,GAAa,IAAlD,UACE,cAAClF,EAAA,EAAD,CAAMC,KAAK,cADb,oBASV,OACE,eAACzB,EAAA,EAAD,CAAS8B,aAAW,EAApB,UACE,eAACkB,EAAA,EAAD,CAAMC,WAAY8B,EAAmB7B,cAAc,SAAnD,UACGoC,EAAUpG,KAAI,SAAC8H,EAAUC,GAAX,OACb,eAACjE,EAAA,EAAKG,KAAN,WACE,cAAC+D,EAAA,EAAD,IACA,cAAClE,EAAA,EAAK3B,QAAN,UACE,eAACrB,EAAA,EAAD,CAASC,OAAK,EAAd,UACE,cAACiH,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAO,EAACC,IAAKL,EAAUf,KAAK,WAC5C,cAACD,EAAD,CAAc9E,QAAS,kBAAM5C,EAAMgJ,gBAAgBL,aALzCA,MAUjB/B,EAAOqC,OAnFK,GAoFX,eAACvE,EAAA,EAAKG,KAAN,WACE,cAAC+D,EAAA,EAAD,IACA,cAAClE,EAAA,EAAK3B,QAAN,UACE,cAAC,EAAD,CAAU2C,YAAaA,EAAa9C,QAASkE,YAKrD,cAACnB,EAAA,EAAD,IACA,cAACsC,EAAD,CACEC,kBAAmBtB,EAAOqC,OAC1BrG,QAASiE,Q,SCxKJqC,EAAQ,SAAClJ,GAAW,IACvBmJ,EAAWnJ,EAAXmJ,OACR,OACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,aAAW,EAAvB,UACE,eAACF,EAAA,EAAD,CAAM1F,OAAmB,UAAXyF,EAAd,UACE,cAACjG,EAAA,EAAD,CAAMC,KAAK,WACX,cAACiG,EAAA,EAAKrG,QAAN,UACE,cAACqG,EAAA,EAAKG,MAAN,2BAIJ,eAACH,EAAA,EAAD,CAAM1F,OAAmB,UAAXyF,EAAd,UACE,cAACjG,EAAA,EAAD,CAAMC,KAAK,UACX,cAACiG,EAAA,EAAKrG,QAAN,UACE,cAACqG,EAAA,EAAKG,MAAN,+B,SC2HKC,MA1Hf,WAAgB,IAAD,EAC+BzC,mBAAS,IADxC,mBACN0C,EADM,KACUC,EADV,OAEe3C,mBAAS,SAFxB,mBAENoC,EAFM,KAEEQ,EAFF,OAGmB5C,qBAHnB,mBAGN9G,EAHM,KAGI2J,EAHJ,OAIa7C,oBAAS,GAJtB,mBAIN8C,EAJM,KAICC,EAJD,KAMb5C,qBAAU,WACRyC,EAAU,WACT,CAACF,IAEJvC,qBAAU,WACR,GAAK2C,EAAL,CACA,IAAME,EAAQC,YAAW,kBAAMF,GAAS,KAAQ,MAChD,OAAO,kBAAMG,aAAaF,OACzB,CAACF,IAEJ,IAAMK,EAAsB,SAACC,GAC3BA,EAAMC,iBAENV,GAAkB,SAACW,GAAD,4BAAoBA,GAApB,YAAmCF,EAAMG,OAAOC,YAG9DC,EAAuB,WAC3B,IAAM/J,EAAO,IAAIgK,SACjBhB,EAAetC,SAAQ,SAACK,EAAOkD,GAC7BjK,EAAKkK,OAAO,SAAUnD,MAExBmC,EAAU,WACViB,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMrK,IAELsK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACtK,GACLuJ,YAAW,WACTJ,EAAYnJ,GACZkJ,EAAU,cACT,QAEJuB,OAAM,SAACC,GACNC,QAAQvB,MAAMsB,GACdxB,EAAU,SACVG,GAAS,OAITuB,EAAe,SAAC,GAAgB,EAAdrI,QAOtB,OACE,cAACsI,EAAA,EAAD,CAAYtI,QAAS6G,EAAO0B,UAAU,UAAUC,SAAU,IAA1D,SACE,cAAClH,EAAA,EAAD,CAAWxC,MARD,CACZgG,SAAU,WACV3D,MAAO,OACPC,OAAQ,GACRqH,MAAO,IAIL,SACE,eAACC,EAAA,EAAD,CAASC,UAAQ,EAAjB,UACE,cAACD,EAAA,EAAQ9J,OAAT,2BACA,+DAOJgK,EAAqB,SAACjD,GAC1B,IAAe,IAAXA,EAAJ,CACA,IAAM/B,EAASiF,MAAMC,KAAKrC,GAC1B7C,EAAOmF,OAAOpD,EAAO,GACrBe,EAAkB9C,KAGdoF,EAAO,WAEX,MAAe,UAAX7C,EAEA,cAAC,EAAD,CACE7F,QAAoB,YAAX6F,EACTlJ,SAAUA,EACVsD,cAAe,kBAAMoG,EAAU,YAGjCF,EAAeR,OAEf,cAAC,EAAD,CACErC,OAAQ6C,EACR5C,iBAAkB2D,EAClB1D,aAAcoD,EACdlB,gBAAiB4C,EACjBlG,aAAcuG,cAIlB,cAAC,EAAD,CAAgBvG,aAAcuG,YAAWrJ,QAASsH,KAItD,OACE,eAAC,IAAMxH,SAAP,WACE,eAAChB,EAAA,EAAD,CACEC,OAAK,EACLuK,OAAQ,OACR/K,UAAU,SACVW,MAAO,CACLM,QAAS,OACT+J,UAAW,QACXC,cAAe,SACfC,OAAQ,GARZ,UAWE,cAACzD,EAAA,EAAD,CAAOC,UAAQ,EAACE,IAAKuD,EAAS3E,KAAK,UACnC,cAAC/F,EAAA,EAAD,CAAQC,GAAG,KAAX,gCACA,2DACA,cAAC,EAAD,CAAOsH,OAAQA,EAAQoD,oBAAqB,kBAAM5C,EAAU,YAC5D,cAACqC,EAAD,OAEF,cAACX,EAAD,CAAcrI,QAAS6G,IACvB,cAAC,EAAD,QC1HS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAAS1K,OACP,cAAC,IAAM2K,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9bb56f5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avocado.9fb67f28.PNG\";","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Grid,\n  Loader,\n  Header,\n  Popup,\n  Segment,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\nimport \"chartjs-plugin-labels\";\n\nconst Graph = (props) => {\n  const { result, summary } = props.response;\n  const to_percentage = (val) => (val * 100).toFixed(2);\n  const probability = to_percentage(result.probability);\n\n  const ripeness = result.category.replace(\"avocado_\", \"\"); // TODO: temp\n  const data = {\n    labels: summary.categories.map((cat) => cat.replace(\"avocado_\", \"\")),\n    datasets: [\n      {\n        backgroundColor: [\"#d9a26f\", \"#b5ba6a\"],\n        borderWidth: 1,\n        data: summary.probabilities,\n      },\n    ],\n  };\n  return (\n    <Grid textAlign=\"center\" columns=\"equal\">\n      <Grid.Row>\n        <Popup\n          content={\n            \"The percentage indicates to what extent the 'AI' is certain about its prediction. It does not quantify the ripeness of the 🥑 as such.\"\n          }\n          header={\"What does this mean?\"}\n          trigger={\n            <Segment basic>\n              <Header as=\"h3\">\n                This 🥑 is <i>{ripeness}</i>\n              </Header>\n              <p>with a {probability}% probability</p>\n            </Segment>\n          }\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <Segment basic style={{ height: \"30vh\" }}>\n          <Pie\n            data={data}\n            options={{\n              maintainAspectRatio: false,\n              events: [], // disable everything on hover\n              legend: {\n                display: false,\n              },\n              plugins: {\n                labels: {\n                  render: \"label\",\n                  fontColor: \"white\",\n                  fontSize: 16,\n                },\n              },\n            }}\n          />\n        </Segment>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst NotVisibleMessage = (props) => {\n  return (\n    <React.Fragment>\n      <Header as=\"h3\">Sorry, I was unable to spot any 🥑</Header>\n      <p>Could you try retaking the photo?</p>\n    </React.Fragment>\n  );\n};\n\nconst ButtonBack = ({ onClick }) => (\n  <Button animated onClick={onClick}>\n    <Button.Content visible>Back</Button.Content>\n    <Button.Content hidden>\n      <Icon name=\"arrow left\" />\n    </Button.Content>\n  </Button>\n);\n\nexport const Result = (props) => {\n  const { loading, onBackClicked } = props;\n  if (loading)\n    return (\n      <Segment placeholder>\n        <Loader active content=\"Loading\" />\n      </Segment>\n    );\n  let out;\n  if (props.response.fruit_visible) {\n    out = <Graph {...props} />;\n  } else {\n    out = <NotVisibleMessage />;\n  }\n  return (\n    <Segment placeholder>\n      {out}\n      <ButtonBack onClick={onBackClicked} />\n    </Segment>\n  );\n};\n","import {\n  Segment,\n  Container,\n  Icon,\n  Grid,\n  Header,\n  List,\n} from \"semantic-ui-react\";\n\nconst URL_LINKEDIN = \"https://www.linkedin.com/in/filip-balucha/\";\nconst URL_GITHUB = \"https://github.com/filipbalucha\";\nconst URL_FACEBOOK = \"https://www.facebook.com/filiposlav\";\nconst EMAIL = \"balucha.filip2@gmail.com\";\nconst model = \"ResNet-18 CNN\";\nvar year = new Date().getFullYear();\n\nexport const Footer = (props) => {\n  return (\n    <Segment\n      inverted\n      vertical\n      style={{\n        padding: \"1.5em 0em\",\n        width: \"100%\",\n        bottom: 0,\n        flex: 1,\n      }}\n    >\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"Author\" />\n              <p>Filip Balucha &copy;{year}</p>\n            </Grid.Column>\n            <Grid.Column width={10}>\n              <Header as=\"h4\" inverted>\n                Why?\n              </Header>\n              <p>\n                I struggle to tell ripe avocados from unripe ones, so I trained\n                a deep learning model based on the {model} to help me with the\n                task. Hope it can help you too 😊. Get in touch if you have any\n                requests or suggestions.\n              </p>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" inverted>\n                Contact\n              </Header>\n              <List horizontal inverted verticalAlign=\"middle\">\n                <List.Item href={URL_LINKEDIN}>\n                  <Icon name=\"linkedin\" />\n                </List.Item>\n                <List.Item href={URL_GITHUB}>\n                  <Icon name=\"github\" />\n                </List.Item>\n                <List.Item href={URL_FACEBOOK}>\n                  <Icon name=\"facebook\" />\n                </List.Item>\n                <List.Item href={`mailto: ${EMAIL}`}>\n                  <Icon name=\"mail\" />\n                </List.Item>\n              </List>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Header,\n  Divider,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\";\n\nconst TakePicture = (props) => (\n  <React.Fragment>\n    <Button as=\"label\" htmlFor=\"cameraInput\" content=\"Take a Picture\" />\n    <input\n      id=\"cameraInput\"\n      type=\"file\"\n      accept=\"image/*\"\n      capture=\"environment\"\n      hidden\n      onChange={props.onClick}\n    />\n  </React.Fragment>\n);\n\nconst UploadImage = (props) => (\n  <React.Fragment>\n    <Button as=\"label\" htmlFor=\"libraryInput\" content=\"Upload an Image\" />\n    <input\n      id=\"libraryInput\"\n      type=\"file\"\n      accept=\"image/*\"\n      multiple\n      hidden\n      onChange={props.onClick}\n    />\n  </React.Fragment>\n);\n\nexport const WelcomeElement = (props) => {\n  const { allowCamera, onClick } = props;\n  let element;\n  if (!allowCamera) {\n    element = (\n      <Segment basic>\n        <Header icon>\n          <Icon name=\"images\" />\n        </Header>\n        <UploadImage onClick={onClick} />\n      </Segment>\n    );\n  } else {\n    element = (\n      <Grid columns={2} textAlign=\"center\">\n        <Divider vertical>Or</Divider>\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"photo\" />\n            </Header>\n            <TakePicture onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"images\" />\n            </Header>\n            <UploadImage onClick={onClick} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return <Segment placeholder>{element}</Segment>;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Button,\n  List,\n  Grid,\n  Divider,\n  Segment,\n  Image,\n  Icon,\n  Popup,\n  Modal,\n} from \"semantic-ui-react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst TakePicture = ({ onClick }) => {\n  const cameraInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button icon=\"camera\" onClick={() => cameraInputRef.current.click()} />\n      <input\n        ref={cameraInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst UploadImage = ({ onClick, icon }) => {\n  const imageInputRef = useRef(null);\n  return (\n    <React.Fragment>\n      <Button icon={icon} onClick={() => imageInputRef.current.click()} />\n      <input\n        ref={imageInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst AddPhoto = ({ allowCamera, onClick }) => {\n  if (!allowCamera) {\n    return <UploadImage onClick={onClick} icon=\"plus\" />;\n  } else {\n    return (\n      <Popup\n        trigger={<Button icon=\"plus\" />}\n        flowing\n        hoverable\n        mouseEnterDelay={150}\n        mouseLeaveDelay={150}\n      >\n        <Grid divided columns=\"equal\">\n          <Grid.Column>\n            <TakePicture onClick={onClick} />\n          </Grid.Column>\n          <Grid.Column>\n            <UploadImage onClick={onClick} icon=\"image\" />\n          </Grid.Column>\n        </Grid>\n      </Popup>\n    );\n  }\n};\n\nexport const ImageCarousel = (props) => {\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const MAX_IMAGES = 4;\n  const { images, onPredictPressed, onAddPressed, allowCamera } = props;\n  const [imageUrls, setImageUrls] = useState([]);\n\n  useEffect(() => {\n    // Revoke URLs to prevent memory leaks\n    // Source: post by Enioluwa Segun @https://stackoverflow.com/questions/57315551/react-uploading-multiple-images\n    imageUrls.forEach((url) => URL.revokeObjectURL(url));\n    const urls = images.map((image) => URL.createObjectURL(image));\n    setImageUrls(urls);\n  }, [images]);\n\n  const RemoveButton = (props) => {\n    return (\n      <Button\n        size=\"medium\"\n        icon=\"cancel\"\n        color=\"red\"\n        circular\n        style={{\n          position: \"absolute\",\n          top: 20,\n          left: 20,\n        }}\n        onClick={props.onClick}\n      />\n    );\n  };\n\n  const PredictButton = ({ numImagesUploaded, onClick }) => {\n    const [modalOpen, setModalOpen] = useState(false);\n    return (\n      <React.Fragment>\n        <Button\n          fluid\n          onClick={() => {\n            if (numImagesUploaded < 2) setModalOpen(true);\n            else onClick();\n          }}\n        >\n          Predict\n        </Button>\n        <Modal size=\"tiny\" open={modalOpen} onClose={() => setModalOpen(false)}>\n          <Modal.Header>Upload more images</Modal.Header>\n          <Modal.Content>\n            <p>\n              Uploading an extra image can improve prediction. Would you like to\n              do so?\n            </p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color=\"red\"\n              onClick={() => {\n                setModalOpen(false);\n                onClick();\n              }}\n            >\n              <Icon name=\"remove\" /> No\n            </Button>\n            <Button color=\"green\" onClick={() => setModalOpen(false)}>\n              <Icon name=\"checkmark\" /> Yes\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Segment placeholder>\n      <List horizontal={isDesktopOrLaptop} verticalAlign=\"middle\">\n        {imageUrls.map((imageUrl, index) => (\n          <List.Item key={index}>\n            <Image />\n            <List.Content>\n              <Segment basic>\n                <Image centered rounded src={imageUrl} size=\"medium\" />\n                <RemoveButton onClick={() => props.onRemovePressed(index)} />\n              </Segment>\n            </List.Content>\n          </List.Item>\n        ))}\n        {images.length < MAX_IMAGES && (\n          <List.Item>\n            <Image />\n            <List.Content>\n              <AddPhoto allowCamera={allowCamera} onClick={onAddPressed} />\n            </List.Content>\n          </List.Item>\n        )}\n      </List>\n      <Divider />\n      <PredictButton\n        numImagesUploaded={images.length}\n        onClick={onPredictPressed}\n      />\n    </Segment>\n  );\n};\n","import { Step, Icon } from \"semantic-ui-react\";\n\nexport const Steps = (props) => {\n  const { status } = props;\n  return (\n    <Step.Group unstackable>\n      <Step active={status === \"AWAIT\"}>\n        <Icon name=\"upload\" />\n        <Step.Content>\n          <Step.Title>Upload </Step.Title>\n        </Step.Content>\n      </Step>\n\n      <Step active={status !== \"AWAIT\"}>\n        <Icon name=\"magic\" />\n        <Step.Content>\n          <Step.Title>Predict</Step.Title>\n        </Step.Content>\n      </Step>\n    </Step.Group>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Header,\n  Image,\n  Segment,\n  Message,\n  Transition,\n  Container,\n} from \"semantic-ui-react\";\nimport avocado from \"./avocado.PNG\";\nimport { Result } from \"./components/Result\";\nimport { Footer } from \"./components/Footer\";\nimport { WelcomeElement } from \"./components/WelcomeElement\";\nimport { ImageCarousel } from \"./components/ImageCarousel\";\nimport { Steps } from \"./components/Steps\";\nimport { isBrowser } from \"react-device-detect\";\n\nfunction App() {\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [status, setStatus] = useState(\"AWAIT\");\n  const [response, setResponse] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setStatus(\"AWAIT\");\n  }, [uploadedImages]);\n\n  useEffect(() => {\n    if (!error) return;\n    const timer = setTimeout(() => setError(false), 2500);\n    return () => clearTimeout(timer);\n  }, [error]);\n\n  const handleImageUploaded = (event) => {\n    event.preventDefault();\n    // Append image to list of images\n    setUploadedImages((prevImages) => [...prevImages, ...event.target.files]);\n  };\n\n  const handlePredictPressed = () => {\n    const data = new FormData();\n    uploadedImages.forEach((image, i) => {\n      data.append(\"file[]\", image);\n    });\n    setStatus(\"LOADING\");\n    fetch(\"/predict\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setTimeout(() => {\n          setResponse(data);\n          setStatus(\"FINISHED\");\n        }, 500); // TODO: simulate request timeout\n      })\n      .catch((err) => {\n        console.error(err);\n        setStatus(\"AWAIT\");\n        setError(true);\n      });\n  };\n\n  const ErrorMessage = ({ visible }) => {\n    const style = {\n      position: \"absolute\",\n      width: \"20vw\",\n      bottom: 10,\n      right: 10,\n    };\n    return (\n      <Transition visible={error} animation=\"fade up\" duration={500}>\n        <Container style={style}>\n          <Message negative>\n            <Message.Header>Server error</Message.Header>\n            <p>Please try again later</p>\n          </Message>\n        </Container>\n      </Transition>\n    );\n  };\n\n  const handleImageRemoved = (index) => {\n    if (index === -1) return;\n    const images = Array.from(uploadedImages);\n    images.splice(index, 1);\n    setUploadedImages(images);\n  };\n\n  const Body = () => {\n    // const { status, response, handlePredictPressed } = props; // TODO: decide if necessary\n    if (status !== \"AWAIT\")\n      return (\n        <Result\n          loading={status === \"LOADING\"}\n          response={response}\n          onBackClicked={() => setStatus(\"AWAIT\")}\n        />\n      );\n    if (uploadedImages.length)\n      return (\n        <ImageCarousel\n          images={uploadedImages}\n          onPredictPressed={handlePredictPressed}\n          onAddPressed={handleImageUploaded}\n          onRemovePressed={handleImageRemoved}\n          allowCamera={!isBrowser}\n        />\n      );\n    return (\n      <WelcomeElement allowCamera={!isBrowser} onClick={handleImageUploaded} />\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Segment\n        basic\n        padded={\"very\"}\n        textAlign=\"center\"\n        style={{\n          display: \"flex\",\n          minHeight: \"100vh\",\n          flexDirection: \"column\",\n          margin: 0,\n        }}\n      >\n        <Image centered src={avocado} size=\"small\" />\n        <Header as=\"h1\">Know Your Avocado!</Header>\n        <p>Say No to Unripe Avocados.</p>\n        <Steps status={status} handleUploadClicked={() => setStatus(\"AWAIT\")} />\n        <Body />\n      </Segment>\n      <ErrorMessage visible={error} />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}